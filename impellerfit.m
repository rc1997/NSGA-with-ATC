function [y1] = impellerfit(x1)
% %MYNEURALNETWORKFUNCTION neural network simulation function.
% %
% % Auto-generated by MATLAB, 11-Sep-2022 15:59:58.
% %
% % [y1] = myNeuralNetworkFunction(x1) takes these arguments:
% %   x = Qx7 matrix, input #1
% % and returns:
% %   y = Qx3 matrix, output #1
% % where Q is the number of samples.
% 
% %#ok<*RPMT0>
% 
% % ===== NEURAL NETWORK CONSTANTS =====
% 
% % Input 1
% x1_step1.xoffset = [-0.04;0.003;-0.5;-2.5;-2;0.002;26000];
% x1_step1.gain = [67.7277345072807;20.9459176406518;4.47948396344741;2.0157429524587;4.06347142363721;71.9916489687196;0.000290275761973875];
% x1_step1.ymin = -1;
% 
% % Layer 1
% b1 = [-0.2262615912404397911;-0.31785630638354223088;-0.1258401302500095631;0.35272985070739731883;-0.12707354216178559647;-0.73577585850509596987;0.070068593635048859181;0.20524761467013974414;-0.20952269890165406419;0.061388356351949259493;0.035765753949375880816;0.030261934395562274658;-0.31414306858005625056;-0.36686758528098123433;-0.088194672975093257872;-0.10289813051522936349;0.25207645669122430432;0.56174647686635326149;-0.071620237981417325668;-0.1004958566804488862];
% IW1_1 = [0.071192480582108655374 0.12870661727341584091 -0.3377557038230816211 -0.18027335205087971493 -0.2605105426208234598 0.17155351084137668294 -0.50960708654659470085;0.25609648983526139832 0.27572139231196157727 -0.061715536778925807193 -0.49859526090191869097 -0.29912837925553242835 -0.043753614740348945045 0.19658588799529366775;0.78329740641029310666 -0.2502811867918777744 -0.38785183727135946752 -0.20383938722206401684 0.13239057389583822055 -0.1157417597481285032 0.57943122371455046959;-0.16004084677352295452 0.33283727183126571303 -0.82322206371138018088 0.18557123735823027877 -0.15841784814360435063 0.37197980734005847703 0.25963128240388172463;0.32053020083566979848 0.25596380812387009573 0.0052870651689415444283 0.6531095760591629773 0.74404628003166450867 -0.32795618347301142004 -0.16358777080324723996;0.84691835542839655204 0.37350726362026426264 0.16729939596736878582 -0.32818378715150031688 0.20849363266169734787 0.24630244114805341371 -0.44616943074813114611;0.5648326556518316055 0.73330105190003547211 -0.30556869168099276557 0.30309043212481573404 0.39144730158884782911 0.45058544977632719597 0.78354926546564962475;-0.93110445860762858228 -0.1539859291055301338 -0.18658142030175828285 -0.25271035553224002745 0.1330442986545668782 0.04997050856153281706 -0.011039084104955333709;-0.24245785797956803664 0.088962805385956106319 -0.12482045585410232735 0.14698304772632386772 -0.15112288506110840847 -0.71514999750949148627 0.44678930948644596244;0.22622800036632945142 0.0042921362351592802845 -0.66700518719871160211 -0.079922544943913015336 0.16851424799039460556 -0.59653347687729352256 -0.43252838154107692281;0.031428272557620817729 0.033489438207811660086 0.28402458983351769328 -0.15410037882392677022 -0.19928429923799526047 -0.071416785402321741882 0.64878886299593729881;-0.011715542021025664512 -0.062655132968583063247 -0.20690382400226969839 0.013147308987241082198 -0.019911064815726714494 0.1147477748666839853 -0.35318438298512266904;-0.38850636908971758476 -0.60006029227531598735 -0.7251733746425753635 0.36848982838895394387 0.15071183838015941858 -0.36333700567385268654 0.35485960564689800201;-0.84050896457930346362 0.3603042322248597995 -0.2889037816673379333 -0.71797587751553770818 -0.086314190454250108719 0.39951231594385266943 0.37459076328660861899;-0.069688763232473277531 -0.17893805439311616379 -0.57634637740276861706 -1.2336586263939437469 -0.14942348944548189404 0.17162629749752938979 -0.42159053588684025637;-0.90875495301891762168 -0.53731644444121295923 0.13578502445828932732 0.11019562432769020033 0.34173047391745281498 -0.545815985879861576 -0.13753780322636527389;0.48746446618730776557 0.45634566438135759636 0.37021008359781076846 0.18754866981295473249 -0.39412283138519460524 -0.50073945429744126656 0.2338819115892692424;0.09353250484077810234 -0.93360820601418115228 -0.37117365735399304727 0.041634416023653898764 -0.070150365812794060472 -0.33411512477185800751 0.055097551712873442387;-0.2470746181364703864 -0.058050497828835236069 0.54536743747548344086 0.017896930152066531372 0.26220775165887960645 -0.17718187367750196093 0.15617600757474600637;-0.080464761725976705065 -0.26395099907764568714 0.06241451703253706601 -0.73018917263069615942 0.13099747733738920097 -0.64995471126101378445 0.15448050525470180538];
% 
% % Layer 2
% b2 = [-0.36006217219604930158;0.021526539981090084958;-0.11009236945694214627];
% LW2_1 = [0.38679779885504683712 -0.42959726613727095001 0.85763223060667659325 0.72586607540974379393 0.18762473784576252922 -0.61887921655202449145 0.037486162662922886679 0.36264469179479985605 0.6889325859437673838 -0.64478802636876919596 0.26570664666668775133 -0.13107193540206163451 -0.78570762321882614554 -0.52408956786589744326 0.13293574240542485598 0.3989290530886062669 -0.49506382006482585467 -0.055072368299621032861 -0.12918594826688356569 0.14827962699203287023;-0.24688067206891964323 -0.26407620760829786377 0.083865439641872568943 -0.27096748139266241262 -0.19192438105223880163 -0.061001621524046721612 -0.0039021634033396821253 -0.18084763698191902437 -0.21623895058177733386 -0.038895857145951756584 0.08969035173478090428 -0.098979260022590220824 0.29475376034234596068 0.14324585876711259935 0.042407030859795823152 -0.19210197689944702448 0.18194819636704784305 -0.35966940954474418968 0.045373173441941069828 -0.011474749470105585769;-0.46952142216835385247 0.067347763673871588463 -0.033062917213035281083 -0.23547714696853730421 -0.75871734762931508644 -0.70591858721397304777 0.91712661388017047148 -0.5430600283315882848 0.2421156966910546493 0.22726463024146165148 0.47358705206721052328 -0.340013262488163992 0.21044840673500980754 -0.82121309468301184609 0.93600330224876437946 0.78444317207704528094 -0.29976807444586184292 -0.87675003509968840731 0.55873510483997490539 -0.63800060547591175286];
% 
% % Output 1
% y1_step1.ymin = -1;
% y1_step1.gain = [0.0157783034757867;187.108242118065;0.823524470617882];
% y1_step1.xoffset = [-72.848;0.009459;0.845204];
% 
% % ===== SIMULATION ========
% 
% % Dimensions
% Q = size(x1,1); % samples
% 
% % Input 1
% x1 = x1';
% xp1 = mapminmax_apply(x1,x1_step1);
% 
% % Layer 1
% a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
% 
% % Layer 2
% a2 = repmat(b2,1,Q) + LW2_1*a1;
% 
% % Output 1
% y1 = mapminmax_reverse(a2,y1_step1);
% y1 = y1';
% end
% 
% % ===== MODULE FUNCTIONS ========
% 
% % Map Minimum and Maximum Input Processing Function
% function y = mapminmax_apply(x,settings)
% y = bsxfun(@minus,x,settings.xoffset);
% y = bsxfun(@times,y,settings.gain);
% y = bsxfun(@plus,y,settings.ymin);
% end
% 
% % Sigmoid Symmetric Transfer Function
% function a = tansig_apply(n,~)
% a = 2 ./ (1 + exp(-2*n)) - 1;
% end
% 
% % Map Minimum and Maximum Output Reverse-Processing Function
% function x = mapminmax_reverse(y,settings)
% x = bsxfun(@minus,y,settings.ymin);
% x = bsxfun(@rdivide,x,settings.gain);
% x = bsxfun(@plus,x,settings.xoffset);
% end
load('D:\tempcompute\CFD.mat');
yt=sim(net1,x1');
y1=yt';